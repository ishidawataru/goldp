// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package goldpapi is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	StartServerRequest
	StartServerResponse
	StopServerRequest
	StopServerResponse
	GetServerRequest
	GetServerResponse
	AddInterfaceRequest
	AddInterfaceResponse
	DeleteInterfaceRequest
	DeleteInterfaceResponse
	ListInterfaceRequest
	ListInterfaceResponse
	ListSessionRequest
	ListSessionResponse
	Server
	Interface
	Session
*/
package goldpapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LabelAdvMode int32

const (
	LabelAdvMode_DOD LabelAdvMode = 0
	LabelAdvMode_DU  LabelAdvMode = 1
)

var LabelAdvMode_name = map[int32]string{
	0: "DOD",
	1: "DU",
}
var LabelAdvMode_value = map[string]int32{
	"DOD": 0,
	"DU":  1,
}

func (x LabelAdvMode) String() string {
	return proto.EnumName(LabelAdvMode_name, int32(x))
}
func (LabelAdvMode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StartServerRequest struct {
	Server *Server `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
}

func (m *StartServerRequest) Reset()                    { *m = StartServerRequest{} }
func (m *StartServerRequest) String() string            { return proto.CompactTextString(m) }
func (*StartServerRequest) ProtoMessage()               {}
func (*StartServerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *StartServerRequest) GetServer() *Server {
	if m != nil {
		return m.Server
	}
	return nil
}

type StartServerResponse struct {
	Server *Server `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
}

func (m *StartServerResponse) Reset()                    { *m = StartServerResponse{} }
func (m *StartServerResponse) String() string            { return proto.CompactTextString(m) }
func (*StartServerResponse) ProtoMessage()               {}
func (*StartServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *StartServerResponse) GetServer() *Server {
	if m != nil {
		return m.Server
	}
	return nil
}

type StopServerRequest struct {
}

func (m *StopServerRequest) Reset()                    { *m = StopServerRequest{} }
func (m *StopServerRequest) String() string            { return proto.CompactTextString(m) }
func (*StopServerRequest) ProtoMessage()               {}
func (*StopServerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type StopServerResponse struct {
	Server *Server `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
}

func (m *StopServerResponse) Reset()                    { *m = StopServerResponse{} }
func (m *StopServerResponse) String() string            { return proto.CompactTextString(m) }
func (*StopServerResponse) ProtoMessage()               {}
func (*StopServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StopServerResponse) GetServer() *Server {
	if m != nil {
		return m.Server
	}
	return nil
}

type GetServerRequest struct {
}

func (m *GetServerRequest) Reset()                    { *m = GetServerRequest{} }
func (m *GetServerRequest) String() string            { return proto.CompactTextString(m) }
func (*GetServerRequest) ProtoMessage()               {}
func (*GetServerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type GetServerResponse struct {
	Server *Server `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
}

func (m *GetServerResponse) Reset()                    { *m = GetServerResponse{} }
func (m *GetServerResponse) String() string            { return proto.CompactTextString(m) }
func (*GetServerResponse) ProtoMessage()               {}
func (*GetServerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetServerResponse) GetServer() *Server {
	if m != nil {
		return m.Server
	}
	return nil
}

type AddInterfaceRequest struct {
	Interface *Interface `protobuf:"bytes,1,opt,name=interface" json:"interface,omitempty"`
}

func (m *AddInterfaceRequest) Reset()                    { *m = AddInterfaceRequest{} }
func (m *AddInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*AddInterfaceRequest) ProtoMessage()               {}
func (*AddInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *AddInterfaceRequest) GetInterface() *Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type AddInterfaceResponse struct {
	Interface *Interface `protobuf:"bytes,1,opt,name=interface" json:"interface,omitempty"`
}

func (m *AddInterfaceResponse) Reset()                    { *m = AddInterfaceResponse{} }
func (m *AddInterfaceResponse) String() string            { return proto.CompactTextString(m) }
func (*AddInterfaceResponse) ProtoMessage()               {}
func (*AddInterfaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *AddInterfaceResponse) GetInterface() *Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type DeleteInterfaceRequest struct {
	Interface *Interface `protobuf:"bytes,1,opt,name=interface" json:"interface,omitempty"`
}

func (m *DeleteInterfaceRequest) Reset()                    { *m = DeleteInterfaceRequest{} }
func (m *DeleteInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteInterfaceRequest) ProtoMessage()               {}
func (*DeleteInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteInterfaceRequest) GetInterface() *Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type DeleteInterfaceResponse struct {
	Interface *Interface `protobuf:"bytes,1,opt,name=interface" json:"interface,omitempty"`
}

func (m *DeleteInterfaceResponse) Reset()                    { *m = DeleteInterfaceResponse{} }
func (m *DeleteInterfaceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteInterfaceResponse) ProtoMessage()               {}
func (*DeleteInterfaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteInterfaceResponse) GetInterface() *Interface {
	if m != nil {
		return m.Interface
	}
	return nil
}

type ListInterfaceRequest struct {
}

func (m *ListInterfaceRequest) Reset()                    { *m = ListInterfaceRequest{} }
func (m *ListInterfaceRequest) String() string            { return proto.CompactTextString(m) }
func (*ListInterfaceRequest) ProtoMessage()               {}
func (*ListInterfaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ListInterfaceResponse struct {
	Interfaces []*Interface `protobuf:"bytes,1,rep,name=interfaces" json:"interfaces,omitempty"`
}

func (m *ListInterfaceResponse) Reset()                    { *m = ListInterfaceResponse{} }
func (m *ListInterfaceResponse) String() string            { return proto.CompactTextString(m) }
func (*ListInterfaceResponse) ProtoMessage()               {}
func (*ListInterfaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ListInterfaceResponse) GetInterfaces() []*Interface {
	if m != nil {
		return m.Interfaces
	}
	return nil
}

type ListSessionRequest struct {
}

func (m *ListSessionRequest) Reset()                    { *m = ListSessionRequest{} }
func (m *ListSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*ListSessionRequest) ProtoMessage()               {}
func (*ListSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type ListSessionResponse struct {
	Sessions []*Session `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
}

func (m *ListSessionResponse) Reset()                    { *m = ListSessionResponse{} }
func (m *ListSessionResponse) String() string            { return proto.CompactTextString(m) }
func (*ListSessionResponse) ProtoMessage()               {}
func (*ListSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ListSessionResponse) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type Server struct {
	RouterId        string       `protobuf:"bytes,1,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	HoldTime        uint32       `protobuf:"varint,2,opt,name=hold_time,json=holdTime" json:"hold_time,omitempty"`
	LocalAddress    string       `protobuf:"bytes,3,opt,name=local_address,json=localAddress" json:"local_address,omitempty"`
	HelloInterval   uint32       `protobuf:"varint,4,opt,name=hello_interval,json=helloInterval" json:"hello_interval,omitempty"`
	KeepAliveTime   uint32       `protobuf:"varint,5,opt,name=keep_alive_time,json=keepAliveTime" json:"keep_alive_time,omitempty"`
	MaxPduLength    uint32       `protobuf:"varint,6,opt,name=max_pdu_length,json=maxPduLength" json:"max_pdu_length,omitempty"`
	LoopDetection   bool         `protobuf:"varint,7,opt,name=loop_detection,json=loopDetection" json:"loop_detection,omitempty"`
	PathVectorLimit uint32       `protobuf:"varint,8,opt,name=path_vector_limit,json=pathVectorLimit" json:"path_vector_limit,omitempty"`
	LabelAdvMode    LabelAdvMode `protobuf:"varint,9,opt,name=label_adv_mode,json=labelAdvMode,enum=goldpapi.LabelAdvMode" json:"label_adv_mode,omitempty"`
}

func (m *Server) Reset()                    { *m = Server{} }
func (m *Server) String() string            { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()               {}
func (*Server) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

type Interface struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *Interface) Reset()                    { *m = Interface{} }
func (m *Interface) String() string            { return proto.CompactTextString(m) }
func (*Interface) ProtoMessage()               {}
func (*Interface) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type Session struct {
	PeerId          string       `protobuf:"bytes,1,opt,name=peer_id,json=peerId" json:"peer_id,omitempty"`
	RouterId        string       `protobuf:"bytes,2,opt,name=router_id,json=routerId" json:"router_id,omitempty"`
	KeepAliveTime   uint32       `protobuf:"varint,3,opt,name=keep_alive_time,json=keepAliveTime" json:"keep_alive_time,omitempty"`
	MaxPduLength    uint32       `protobuf:"varint,4,opt,name=max_pdu_length,json=maxPduLength" json:"max_pdu_length,omitempty"`
	LoopDetection   bool         `protobuf:"varint,5,opt,name=loop_detection,json=loopDetection" json:"loop_detection,omitempty"`
	PathVectorLimit uint32       `protobuf:"varint,6,opt,name=path_vector_limit,json=pathVectorLimit" json:"path_vector_limit,omitempty"`
	LabelAdvMode    LabelAdvMode `protobuf:"varint,7,opt,name=label_adv_mode,json=labelAdvMode,enum=goldpapi.LabelAdvMode" json:"label_adv_mode,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func init() {
	proto.RegisterType((*StartServerRequest)(nil), "goldpapi.StartServerRequest")
	proto.RegisterType((*StartServerResponse)(nil), "goldpapi.StartServerResponse")
	proto.RegisterType((*StopServerRequest)(nil), "goldpapi.StopServerRequest")
	proto.RegisterType((*StopServerResponse)(nil), "goldpapi.StopServerResponse")
	proto.RegisterType((*GetServerRequest)(nil), "goldpapi.GetServerRequest")
	proto.RegisterType((*GetServerResponse)(nil), "goldpapi.GetServerResponse")
	proto.RegisterType((*AddInterfaceRequest)(nil), "goldpapi.AddInterfaceRequest")
	proto.RegisterType((*AddInterfaceResponse)(nil), "goldpapi.AddInterfaceResponse")
	proto.RegisterType((*DeleteInterfaceRequest)(nil), "goldpapi.DeleteInterfaceRequest")
	proto.RegisterType((*DeleteInterfaceResponse)(nil), "goldpapi.DeleteInterfaceResponse")
	proto.RegisterType((*ListInterfaceRequest)(nil), "goldpapi.ListInterfaceRequest")
	proto.RegisterType((*ListInterfaceResponse)(nil), "goldpapi.ListInterfaceResponse")
	proto.RegisterType((*ListSessionRequest)(nil), "goldpapi.ListSessionRequest")
	proto.RegisterType((*ListSessionResponse)(nil), "goldpapi.ListSessionResponse")
	proto.RegisterType((*Server)(nil), "goldpapi.Server")
	proto.RegisterType((*Interface)(nil), "goldpapi.Interface")
	proto.RegisterType((*Session)(nil), "goldpapi.Session")
	proto.RegisterEnum("goldpapi.LabelAdvMode", LabelAdvMode_name, LabelAdvMode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for GoldpApi service

type GoldpApiClient interface {
	StartServer(ctx context.Context, in *StartServerRequest, opts ...grpc.CallOption) (*StartServerResponse, error)
	StopServer(ctx context.Context, in *StopServerRequest, opts ...grpc.CallOption) (*StopServerResponse, error)
	GetServer(ctx context.Context, in *GetServerRequest, opts ...grpc.CallOption) (*GetServerResponse, error)
}

type goldpApiClient struct {
	cc *grpc.ClientConn
}

func NewGoldpApiClient(cc *grpc.ClientConn) GoldpApiClient {
	return &goldpApiClient{cc}
}

func (c *goldpApiClient) StartServer(ctx context.Context, in *StartServerRequest, opts ...grpc.CallOption) (*StartServerResponse, error) {
	out := new(StartServerResponse)
	err := grpc.Invoke(ctx, "/goldpapi.GoldpApi/StartServer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goldpApiClient) StopServer(ctx context.Context, in *StopServerRequest, opts ...grpc.CallOption) (*StopServerResponse, error) {
	out := new(StopServerResponse)
	err := grpc.Invoke(ctx, "/goldpapi.GoldpApi/StopServer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goldpApiClient) GetServer(ctx context.Context, in *GetServerRequest, opts ...grpc.CallOption) (*GetServerResponse, error) {
	out := new(GetServerResponse)
	err := grpc.Invoke(ctx, "/goldpapi.GoldpApi/GetServer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoldpApi service

type GoldpApiServer interface {
	StartServer(context.Context, *StartServerRequest) (*StartServerResponse, error)
	StopServer(context.Context, *StopServerRequest) (*StopServerResponse, error)
	GetServer(context.Context, *GetServerRequest) (*GetServerResponse, error)
}

func RegisterGoldpApiServer(s *grpc.Server, srv GoldpApiServer) {
	s.RegisterService(&_GoldpApi_serviceDesc, srv)
}

func _GoldpApi_StartServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoldpApiServer).StartServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goldpapi.GoldpApi/StartServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoldpApiServer).StartServer(ctx, req.(*StartServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoldpApi_StopServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoldpApiServer).StopServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goldpapi.GoldpApi/StopServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoldpApiServer).StopServer(ctx, req.(*StopServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoldpApi_GetServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoldpApiServer).GetServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/goldpapi.GoldpApi/GetServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoldpApiServer).GetServer(ctx, req.(*GetServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoldpApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "goldpapi.GoldpApi",
	HandlerType: (*GoldpApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartServer",
			Handler:    _GoldpApi_StartServer_Handler,
		},
		{
			MethodName: "StopServer",
			Handler:    _GoldpApi_StopServer_Handler,
		},
		{
			MethodName: "GetServer",
			Handler:    _GoldpApi_GetServer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 640 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x95, 0xdd, 0x6e, 0xda, 0x4c,
	0x10, 0x86, 0x63, 0x48, 0xc0, 0x9e, 0x00, 0x81, 0x25, 0x5f, 0x62, 0x91, 0x7c, 0x0a, 0x72, 0x7f,
	0x84, 0x22, 0x35, 0x52, 0x93, 0xd3, 0xfe, 0x08, 0x09, 0x35, 0x45, 0x75, 0xd5, 0x0a, 0xda, 0x9e,
	0x5a, 0x0e, 0x3b, 0x0d, 0xab, 0xae, 0x59, 0xd7, 0x5e, 0x50, 0xae, 0xa6, 0x37, 0x58, 0xf5, 0x1e,
	0xaa, 0x5d, 0xdb, 0xd8, 0x90, 0x44, 0x22, 0x51, 0xcf, 0xf0, 0x33, 0xef, 0xbe, 0x33, 0x3b, 0x83,
	0xc7, 0x60, 0xf9, 0x21, 0x3b, 0x0b, 0x23, 0x21, 0x05, 0x31, 0xaf, 0x05, 0xa7, 0xa1, 0x1f, 0x32,
	0xe7, 0x0d, 0x90, 0xb1, 0xf4, 0x23, 0x39, 0xc6, 0x68, 0x81, 0xd1, 0x08, 0x7f, 0xce, 0x31, 0x96,
	0xa4, 0x07, 0x95, 0x58, 0x03, 0xdb, 0xe8, 0x1a, 0xbd, 0xdd, 0xf3, 0xe6, 0x59, 0x76, 0xe0, 0x2c,
	0x15, 0xa6, 0x71, 0xe7, 0x2d, 0xb4, 0x57, 0xce, 0xc7, 0xa1, 0x98, 0xc5, 0xf8, 0x00, 0x83, 0x36,
	0xb4, 0xc6, 0x52, 0x84, 0x2b, 0xf9, 0x93, 0xaa, 0x72, 0xf8, 0x60, 0x53, 0x02, 0xcd, 0x4b, 0x5c,
	0xbd, 0x93, 0xf3, 0x1a, 0x5a, 0x05, 0xf6, 0x60, 0xcb, 0xf7, 0xd0, 0xee, 0x53, 0x3a, 0x9c, 0x49,
	0x8c, 0xbe, 0xfb, 0x13, 0xcc, 0x3a, 0xf5, 0x12, 0x2c, 0x96, 0xb1, 0xd4, 0xa3, 0x9d, 0x7b, 0xe4,
	0xf2, 0x5c, 0xe5, 0x0c, 0x61, 0x7f, 0xd5, 0x29, 0xad, 0xe5, 0x11, 0x56, 0x1f, 0xe0, 0x60, 0x80,
	0x1c, 0x25, 0xfe, 0x8b, 0xba, 0x5c, 0x38, 0xbc, 0x65, 0xf6, 0xf8, 0xd2, 0x0e, 0x60, 0xdf, 0x65,
	0xb1, 0x5c, 0x2f, 0xcc, 0x71, 0xe1, 0xbf, 0x35, 0x9e, 0xe6, 0xb8, 0x00, 0x58, 0x9e, 0x8e, 0x6d,
	0xa3, 0x5b, 0xbe, 0x2f, 0x49, 0x41, 0xe6, 0xec, 0x03, 0x51, 0x6e, 0x63, 0x8c, 0x63, 0x26, 0x66,
	0x59, 0x8e, 0x01, 0xb4, 0x57, 0x68, 0x9a, 0xe1, 0x05, 0x98, 0x71, 0x82, 0x32, 0xff, 0x56, 0x71,
	0xdc, 0x89, 0x78, 0x29, 0x71, 0xfe, 0x94, 0xa0, 0x92, 0xfc, 0x09, 0xc8, 0x11, 0x58, 0x91, 0x98,
	0x4b, 0x8c, 0x3c, 0x46, 0xf5, 0xfd, 0xad, 0x91, 0x99, 0x80, 0x21, 0x55, 0xc1, 0xa9, 0xe0, 0xd4,
	0x93, 0x2c, 0x40, 0xbb, 0xd4, 0x35, 0x7a, 0xf5, 0x91, 0xa9, 0xc0, 0x17, 0x16, 0x20, 0x79, 0x02,
	0x75, 0x2e, 0x26, 0x3e, 0xf7, 0x7c, 0x4a, 0x23, 0x8c, 0x63, 0xbb, 0xac, 0x4f, 0xd7, 0x34, 0xec,
	0x27, 0x8c, 0x3c, 0x83, 0xc6, 0x14, 0x39, 0x17, 0x9e, 0xbe, 0xd9, 0xc2, 0xe7, 0xf6, 0xb6, 0xb6,
	0xa9, 0x6b, 0x3a, 0x4c, 0x21, 0x79, 0x0e, 0x7b, 0x3f, 0x10, 0x43, 0xcf, 0xe7, 0x6c, 0x81, 0x49,
	0xba, 0x9d, 0x44, 0xa7, 0x70, 0x5f, 0x51, 0x9d, 0xf3, 0x29, 0x34, 0x02, 0xff, 0xc6, 0x0b, 0xe9,
	0xdc, 0xe3, 0x38, 0xbb, 0x96, 0x53, 0xbb, 0xa2, 0x65, 0xb5, 0xc0, 0xbf, 0xf9, 0x4c, 0xe7, 0xae,
	0x66, 0x2a, 0x29, 0x17, 0x22, 0xf4, 0x28, 0x4a, 0x9c, 0x48, 0x26, 0x66, 0x76, 0xb5, 0x6b, 0xf4,
	0xcc, 0x51, 0x5d, 0xd1, 0x41, 0x06, 0xc9, 0x29, 0xb4, 0x42, 0x5f, 0x4e, 0xbd, 0x05, 0x4e, 0xa4,
	0x88, 0x3c, 0xce, 0x02, 0x26, 0x6d, 0x53, 0xfb, 0xed, 0xa9, 0xc0, 0x37, 0xcd, 0x5d, 0x85, 0xc9,
	0x2b, 0x68, 0x70, 0xff, 0x0a, 0xd5, 0x65, 0x17, 0x5e, 0x20, 0x28, 0xda, 0x56, 0xd7, 0xe8, 0x35,
	0xce, 0x0f, 0xf2, 0x36, 0xbb, 0x2a, 0xde, 0xa7, 0x8b, 0x8f, 0x82, 0xe2, 0xa8, 0xc6, 0x0b, 0x4f,
	0xce, 0x09, 0x58, 0xcb, 0x21, 0x13, 0x02, 0xdb, 0x33, 0x3f, 0xc0, 0xb4, 0xd9, 0xfa, 0xb7, 0xf3,
	0xab, 0x04, 0xd5, 0x74, 0x4c, 0xe4, 0x10, 0xaa, 0x21, 0x16, 0xe7, 0x51, 0x51, 0x8f, 0xc9, 0x34,
	0xf2, 0x51, 0x95, 0xd6, 0x46, 0x75, 0x47, 0x07, 0xcb, 0x9b, 0x75, 0x70, 0x7b, 0xa3, 0x0e, 0xee,
	0x6c, 0xdc, 0xc1, 0xca, 0xa6, 0x1d, 0xac, 0x6e, 0xde, 0xc1, 0xd3, 0x13, 0xa8, 0x15, 0xa3, 0xa4,
	0x0a, 0xe5, 0xc1, 0xa7, 0x41, 0x73, 0x8b, 0x54, 0xa0, 0x34, 0xf8, 0xda, 0x34, 0xce, 0x7f, 0x1b,
	0x60, 0x5e, 0x2a, 0xa3, 0x7e, 0xc8, 0x88, 0x0b, 0xbb, 0x85, 0xd5, 0x4d, 0x8e, 0x0b, 0xef, 0xc2,
	0xad, 0x2f, 0x42, 0xe7, 0xff, 0x7b, 0xa2, 0xc9, 0xab, 0xe5, 0x6c, 0x91, 0x21, 0x40, 0xbe, 0xb2,
	0xc9, 0x51, 0x51, 0xbe, 0xb6, 0xdd, 0x3b, 0xc7, 0x77, 0x07, 0x97, 0x56, 0xef, 0xc0, 0x5a, 0x6e,
	0x6a, 0xd2, 0xc9, 0xc5, 0xeb, 0x2b, 0xbd, 0x73, 0x74, 0x67, 0x2c, 0xf3, 0xb9, 0xaa, 0xe8, 0x8f,
	0xdd, 0xc5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x13, 0x08, 0xfa, 0xf9, 0x06, 0x00, 0x00,
}
